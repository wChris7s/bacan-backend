subprojects { Project subproject ->
  {
    apply {
      plugin "app-base.plugin"
      plugin "app-spring.plugin"
      plugin "app-cloud.plugin"
      plugin "app-reactive-db.plugin"
      plugin 'com.palantir.docker'
    }

    bootRun {
      systemProperties = System.properties as Map<String, ?>
    }

    dependencies {
      implementation project(':common:core')
      implementation 'org.springframework.cloud:spring-cloud-starter-config'
    }

    // ======================== PALANTIR DOCKER ========================
    // =========== https://github.com/palantir/gradle-docker ===========
    /* > Locally
    docker {
      name "bacan/${subproject.name}:${subproject.version}"
      dockerfile file("build/template/Dockerfile")
      files "build/libs/${subproject.name}-${subproject.version}.jar"
      copySpec.from("build/resources/main").into("src")
      buildArgs([
        'JAR_NAME'       : "src/${subproject.name}-${subproject.version}.jar",
        'SOURCE_DIR_NAME': "src",
      ])
    }
    */

    docker {
      name "556180171691.dkr.ecr.us-east-2.amazonaws.com/${subproject.name}:${subproject.version}"
      dockerfile file("build/template/Dockerfile")
      files "build/libs/${subproject.name}-${subproject.version}.jar"
      copySpec.from("build/resources/main").into("src")
      buildArgs([
        'JAR_NAME'       : "src/${subproject.name}-${subproject.version}.jar",
        'SOURCE_DIR_NAME': "src",
      ])
    }

    tasks.register('copyDockerTemplate', Copy) {
      from "${rootDir}/docker/template/Dockerfile"
      into layout.projectDirectory.dir("build/template")
    }

    dockerPrepare.dependsOn build, copyDockerTemplate
    // ======================== =============== ========================

    compileJava.dependsOn(clean)
    docker.dependsOn(build)

    tasks.named('test') {
      useJUnitPlatform()
    }
  }
}
